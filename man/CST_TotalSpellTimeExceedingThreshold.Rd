% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TotalSpellTimeExceedingThreshold.R
\name{CST_TotalSpellTimeExceedingThreshold}
\alias{CST_TotalSpellTimeExceedingThreshold}
\title{Total Spell Time Exceeding Threshold}
\usage{
CST_TotalSpellTimeExceedingThreshold(
  data,
  threshold,
  spell,
  op = ">",
  start = NULL,
  end = NULL,
  time_dim = "time",
  ncores = NULL
)
}
\arguments{
\item{data}{An 's2dv_cube' object as provided function \code{CST_Start} or 
\code{CST_Load} in package CSTools.}

\item{threshold}{If only one threshold is used, it can be an 's2dv_cube' 
object or a multidimensional array with named dimensions. It must be in the 
same units and with the common dimensions of the same length as parameter 
'data'. It can also be a vector with the same length of 'time_dim' from 
'data' or a scalar. If we want to use two thresholds: it can be a vector 
of two scalars, a list of two vectors with the same length of 
'time_dim' from 'data' or a list of two multidimensional arrays with the 
common dimensions of the same length as parameter 'data'. If two thresholds
are used, parameter 'op' must be also a vector of two elements.}

\item{spell}{A scalar indicating the minimum length of the spell.}

\item{op}{An operator '>' (by default), '<', '>=' or '<='. If  two thresholds
are used it has to be a vector of a pair of two logical operators: 
c('<', '>'), c('<', '>='), c('<=', '>'), c('<=', '>='), c('>', '<'), 
c('>', '<='), c('>=', '<'),c('>=', '<=')).}

\item{start}{An optional parameter to define the initial date of the period 
to select from the data by providing a list of two elements: the initial 
date of the period and the initial month of the period. By default it is set
to NULL and the indicator is computed using all the data provided in 
\code{data}.}

\item{end}{An optional parameter to defined the final date of the period to 
select from the data by providing a list of two elements: the final day of 
the period and the final month of the period. By default it is set to NULL 
and the indicator is computed using all the data provided in \code{data}.}

\item{time_dim}{A character string indicating the name of the dimension to 
compute the indicator. By default, it is set to 'time'. It can only
indicate one time dimension.}

\item{ncores}{An integer indicating the number of cores to use in parallel 
computation.}
}
\value{
An 's2dv_cube' object containing the number of days that are part of a
spell within a threshold in element \code{data} with dimensions of the input 
parameter 'data' except the dimension where the indicator has been computed.
The 'Dates' array is updated to the dates corresponding to the beginning of 
the aggregated time period. A new element called 'time_bounds' will be added  
into the 'attrs' element in the 's2dv_cube' object. It consists of a list 
containing two elements, the start and end dates of the aggregated period with 
the same dimensions of 'Dates' element.
}
\description{
The number of days (when daily data is provided) that are part of a spell 
(defined by its minimum length e.g. 6 consecutive days) that exceed (or not 
exceed) a threshold are calculated with \code{TotalSpellTimeExceedingThreshold}.
This function allows to compute indicators widely used in Climate Services, 
such as:
\itemize{
 \item{'WSDI', Warm Spell Duration Index that count the total number of days 
       with at least 6 consecutive days when the daily temperature 
       maximum exceeds its 90th percentile.}
}
This function requires the data and the threshold to be in the same units. The 
90th percentile can be translate into absolute values given a reference dataset 
using function \code{Threshold} or the data can be transform into probabilites 
by using function \code{AbsToProbs}. See section @examples.
}
\examples{
exp <- NULL
exp$data <- array(rnorm(5 * 3 * 214 * 2)*23,
                 c(member = 5, sdate = 3, time = 214, lon = 2)) 
exp$attrs$Dates <- c(seq(as.Date("01-05-2000", format = "\%d-\%m-\%Y"), 
                        as.Date("30-11-2000", format = "\%d-\%m-\%Y"), by = 'day'),
                    seq(as.Date("01-05-2001", format = "\%d-\%m-\%Y"), 
                        as.Date("30-11-2001", format = "\%d-\%m-\%Y"), by = 'day'),
                    seq(as.Date("01-05-2002", format = "\%d-\%m-\%Y"), 
                        as.Date("30-11-2002", format = "\%d-\%m-\%Y"), by = 'day'))
dim(exp$attrs$Dates) <- c(sdate = 3, time = 214)
class(exp) <- 's2dv_cube'
TTSET <- CST_TotalSpellTimeExceedingThreshold(exp, threshold = 23, spell = 3,
                                             start = list(21, 4), 
                                             end = list(21, 6))

}
\seealso{
[Threshold()] and [AbsToProbs()].
}
